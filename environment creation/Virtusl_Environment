Definition:
................
A virtual environment is an isolated environment that allows you to manage project-specific dependencies without affecting the global Python installation.
When working with older projects that require specific library versions.
When contributing to shared projects or collaborating with others.

Benefits:
----------
Isolation: Keeps project dependencies separate.
Conflict-Free: Avoids version conflicts between projects.
Reproducibility: Makes it easy to share and recreate the environment.

When to Use:
Always use a virtual environment for Python projects to ensure clean dependency management.


Core Commands:
==============
=>Create: python -m venv myenv
-----------------------------
=>Activate: myenv\Scripts\activate.bat (cmd) / source myenv/bin/activate (Linux/Mac) / myenv\Scripts\activate.bs1 (powershell)
-----------------------------
=>Deactivate: deactivate
------------------------------
=>Install Dependencies: pip install package_name (to install a specific version -> pip <name>==<requiredversion>)
---------------------------------
=>Save Dependencies: pip freeze > requirements.txt
 ==>to install dependencies  from a requirements.txt file: pip install -r requirements.txt
---------------------------------
=> delete environment:  rmdir /s /q <environment name>
--------------------------------
=> making folder: mkdir myfolder
---------------------------------
=>making file: code myscript.py